version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dev-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - dev-network

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     - dev-network

  # kafka:
  #   image: wurstmeister/kafka:latest
  #   container_name: kafka
  #   environment:
  #     KAFKA_ADVERTISED_LISTENER: INSIDE_KAFKA:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
  #     KAFKA_LISTENER_NAME: INSIDE_KAFKA
  #     KAFKA_LISTENER_PORT: 9093
  #     KAFKA_LISTENER_INTERNAL: INSIDE_KAFKA:9093
  #     KAFKA_LISTENER_EXTERNAL: EXTERNAL_KAFKA:9094
  #     KAFKA_LISTENER_INTERNAL_PORT: 9093
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_NAMES: INSIDE_KAFKA,EXTERNAL_KAFKA
  #     KAFKA_LISTENER_EXTERNAL: EXTERNAL_KAFKA:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
  #     KAFKA_PORT: 9094
  #   ports:
  #     - "9093:9093"
  #     - "9094:9094"
  #   depends_on:
  #     - zookeeper
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data 
  #   networks:
  #     - dev-network

  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   container_name: kafdrop
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:9092"
  #   networks:
  #     - dev-network

volumes:
  postgres-data:
  # kafka-data:

networks:
  dev-network:
    driver: bridge
